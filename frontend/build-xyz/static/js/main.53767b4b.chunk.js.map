{"version":3,"sources":["util/pinata.js","util/interact.js","util/nonascii.js","img/samples.gif","img/roadmap.png","Minter.js","Mobile.js","Samples.js","img/algorithm.png","Algorithm.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","axios","pinJSONToIPFS","JSONBody","post","headers","pinata_api_key","process","pinata_secret_api_key","then","response","success","pinataUrl","data","IpfsHash","catch","error","console","log","message","contractABI","contractAddress","web3","createAlchemyWeb3","connectWallet","window","ethereum","request","method","addressArray","obj","status","address","toLowerCase","getCurrentWalletConnected","length","getJSON","url","fetch","json","mintNFT","name","signature","messageHash","trim","alert","jsonData","pinataResponseMetadata","tokenIPFS","tokenURI","price","slice","eth","Contract","abi","contract","transactionParameters","to","from","selectedAddress","methods","mintToken","encodeABI","value","utils","toHex","toWei","chainID","gas","params","txHash","arabic","persian","hindi","korean","chinese","parseRoman","roman","sum","romanMap","i","current","next","undefined","h2e","s","replace","d","indexOf","p2e","a2e","c2e","k2e","Minter","props","useState","walletAddress","setWallet","setStatus","ens","setENS","setMessage","setMessageHash","uri","setURI","setSignature","nft","setNFT","record","setRecord","isMobile","mainnet","ethers","providers","AlchemyProvider","width","Math","max","document","documentElement","clientWidth","innerWidth","useEffect","isComponentMounted","fetchData","addWalletListener","navigate","useNavigate","lookupAddress","nameResolve","on","accounts","switchWalletPressed","eth_accounts","connectWalletPressed","walletResponse","onSignPressed","digit","hasNonAscii","test","isArabic","every","item","includes","isPersian","isHindi","isChinese","isKorean","isRoman","substring","startsWith","trans","lang","resolveName","addressResolve","provider","Web3Provider","signer","getSigner","timestamp","Date","now","rawMessage","toSign","id","payload","defaultAbiCoder","encode","messageHashed","keccak256","messageBytes","arrayify","signMessage","signedValue","meta","prompt","body","JSON","stringify","image","link","onMintPressed","className","onClick","endsWith","String","style","background","color","marginTop","marginLeft","fontSize","fontWeight","float","marginBottom","alt","src","sample","height","fontFamily","type","placeholder","onChange","event","target","disabled","marginleft","toString","textDecoration","href","rel","roadmap","Mobile","location","homepage","split","pop","Samples","nftFront","setNFTFront","nftBack","setNFTBack","onGeneratePressed","urlImg","Algorithm","algorithm","App","basename","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53767b4b.chunk.js","sourcesContent":["require('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nexport const pinJSONToIPFS = async(JSONBody) => {\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n    return axios\n        .post(url, JSONBody, {\n            headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n           return {\n               success: true,\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n           };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n\n        });\n};\n","import { pinJSONToIPFS } from \"./pinata.js\";\nrequire(\"dotenv\").config();\nconst alchemyURL = process.env.REACT_APP_ALCHEMY_URL_MAINNET;\nconst contractABI = require(\"../contract-abi.json\");\nconst contractAddress = '0x14ab45f6edc154e338e27f8d1d2a7cad4ed62ec2';\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyURL);\n\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \"👆🏽 Enter ENS & click 'NEXT →'\",\n        address: addressArray[0],\n      };\n      return obj;\n    } catch (err) {\n      console.log(\"❌ Failed to initialise: \" + err.message);\n      return {\n        address: \"\",\n        status: \"❌ Failed to initialise: \" + err.message.toLowerCase(),\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: \"🦊 You must install MetaMask browser extension & connect using 'Connect Wallet' button\",\n    };\n  }\n};\n\nexport const getCurrentWalletConnected = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"👆🏽 Enter ENS & click 'NEXT →'\",\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"🦊 Connect to MetaMask using 'Connect Wallet' button\",\n        };\n      }\n\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"❌ \" + err.message.toLowerCase(),\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: \"🦊 You must install MetaMask browser extension & connect using 'Connect Wallet' button\",\n    };\n  }\n};\n\nasync function getJSON(url) {\n    let response = await fetch(url);\n    let data = await response.json()\n    return data;\n}\n\nexport const mintNFT = async (url, name, message, signature, messageHash) => {\n  if (url.trim() === \"\" || name.trim() === \"\" || message.trim() === \"\" || signature.trim() === \"\" || messageHash.trim() === \"\") {\n    window.alert('❗ Metadata is incomplete.');\n    return {\n      success: false,\n      status: \"❗ Metadata is incomplete.\",\n    };\n  } else {\n    console.log('⌛ Minting...');\n    const jsonData = await getJSON(url);\n    // console.log(jsonData);\n\n    if (jsonData.signature === signature) {\n      if (!url) {\n        window.alert('❌ Metadata URI missing ❗');\n        return {\n          success: false,\n          status: \"❌ Metadata URI missing ❗\",\n        };\n      } else {\n        const pinataResponseMetadata = await pinJSONToIPFS(jsonData);\n        if (!pinataResponseMetadata.success) {\n          console.log('❌ Something went wrong while pinning metadat/image to IPFS ❗');\n          return {\n            success: false,\n            status: \"❌ Something went wrong while pinning metadata/image to IPFS ❗\",\n          };\n        } else {\n          let tokenIPFS = pinataResponseMetadata.pinataUrl;\n          let tokenURI = url\n          console.log('📎 metadata pinned at: ' + tokenIPFS);\n          console.log('📎 tokenURI is set at: ' + tokenURI);\n\n          var price = '1.0';\n          if (name.slice(0, -4).length === 3) {\n            price = '0.05';\n          } else if (name.slice(0, -4).length === 4) {\n            price = '0.01';\n          } else if (name.slice(0, -4).length >= 5) {\n            price = '0.005';\n          }\n\n          window.contract = await new web3.eth.Contract(contractABI.abi, contractAddress);\n          const transactionParameters = {\n            to: contractAddress,\n            from: window.ethereum.selectedAddress,\n            data: window.contract.methods\n              .mintToken(messageHash, message, signature, tokenURI, name.slice(0, -4))\n              .encodeABI(),\n            value: web3.utils.toHex(web3.utils.toWei(price, \"ether\" )),\n            chainID: '1',\n            gas: web3.utils.toHex('175000'),\n          };\n\n          try {\n            const txHash = await window.ethereum.request({\n              method: \"eth_sendTransaction\",\n              params: [transactionParameters],\n            });\n            console.log(txHash);\n\n            return {\n              success: true,\n              status: \"🚀 Transaction sent! Check your wallet or LooksRare/Rarible/OpenSea.\",\n            };\n          } catch (error) {\n            return {\n              success: false,\n              status: \"❌ Something went wrong: \" + error.message.toLowerCase(),\n            };\n          }\n        }\n      }\n    } else {\n      window.alert('❌ Something went wrong while uploading your tokenURI. Signature appears tampered! ❗');\n      return {\n        success: false,\n        status: \"❌ Something went wrong while uploading your tokenURI. Signature appears tampered! ❗\",\n      };\n    }\n  }\n};\n","// arabic dictionary\n\n// arabic = ٠ ١ ٢ ٣ ٤ ٥ ٦ ٧ ٨ ٩\nexport const arabic = [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"];\n\n// arabic = ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹\nexport const persian = [\"۹\", \"۸\", \"۷\", \"۶\", \"۵\", \"۴\", \"۳\", \"۲\", \"۱\", \"۰\"];\n\n// hindi = ० १ २ ३ ४ ५ ६ ७ ८ ९\nexport const hindi = [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\"];\n\n// korean = 영 일 이 삼 사 오 육 칠 팔 구 십 백\nexport const korean = [\"영\", \"일\", \"이\", \"삼\", \"사\", \"오\", \"육\", \"칠\", \"팔\", \"구\"];\n\n// chinese = 〇 一 二 三 四 五 六 七 八 九 十 百 千 萬 億 万 亿 壹 貳 叄 肆 伍 陸 柒 捌 玖 拾 佰 仟 贰 叁 陆\nexport const chinese = [\"〇\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"];\n\nconst isRoman = (digit) => {\n  /^(m{1,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|c?d|d?c{1,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|x?l|l?x{1,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|i?v|v?i{1,3}))$/.test(digit) || /^(M{1,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})|M{0,4}(CM|C?D|D?C{1,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})|M{0,4}(CM|CD|D?C{0,3})(XC|X?L|L?X{1,3})(IX|IV|V?I{0,3})|M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|I?V|V?I{1,3}))$/.test(digit);\n};\nexport const parseRoman = (roman) => {\n\tlet sum = 0;\n  let romanMap = {\n  \t\"i\": 1,\n  \t\"v\": 5,\n  \t\"x\": 10,\n  \t\"l\": 50,\n  \t\"c\": 100,\n  \t\"d\": 500,\n  \t\"m\": 1000,\n    \"I\": 1,\n  \t\"V\": 5,\n  \t\"X\": 10,\n  \t\"L\": 50,\n  \t\"C\": 100,\n  \t\"D\": 500,\n  \t\"M\": 1000\n  };\n\tfor (let i = 0; i < roman.length; i++) {\n\t\tconst current = romanMap[roman[i]];\n\t\tconst next = romanMap[roman[i + 1]];\n\t\tif (next === undefined) {\n\t\t\tsum += current;\n\t\t\tcontinue;\n\t\t}\n\t\tif (current >= next) {\n\t\t\tsum += current;\n\t\t\tcontinue;\n\t\t}\n\t\tsum -= current;\n\t}\n\treturn sum;\n}\n\n// e = english, p = persian, a = arabic, c = chinese, k = korean\nexport const e2h = s => s.replace(/\\d/g, d => '०१२३४५६७८९'[d]);\nexport const h2e = s => s.replace(/[०-९]/g, d => '०१२३४५६७८९'.indexOf(d));\nexport const e2p = s => s.replace(/\\d/g, d => '۰۱۲۳۴۵۶۷۸۹'[d]);\nexport const e2a = s => s.replace(/\\d/g, d => '٠١٢٣٤٥٦٧٨٩'[d]);\nexport const p2e = s => s.replace(/[۰-۹]/g, d => '۰۱۲۳۴۵۶۷۸۹'.indexOf(d));\nexport const a2e = s => s.replace(/[٠-٩]/g, d => '٠١٢٣٤٥٦٧٨٩'.indexOf(d));\nexport const p2a = s => s.replace(/[۰-۹]/g, d => '٠١٢٣٤٥٦٧٨٩'['۰۱۲۳۴۵۶۷۸۹'.indexOf(d)]);\nexport const a2p = s => s.replace(/[٠-٩]/g, d => '۰۱۲۳۴۵۶۷۸۹'['٠١٢٣٤٥٦٧٨٩'.indexOf(d)]);\nexport const e2c = s => s.replace(/\\d/g, d => '〇一二三四五六七八九'[d]);\nexport const c2e = s => s.replace(/[〇,一,二,三,四,五,六,七,八,九]/g, d => '〇一二三四五六七八九'.indexOf(d));\nexport const e2k = s => s.replace(/\\d/g, d => '영일이삼사오육칠팔구'[d]);\nexport const k2e = s => s.replace(/[영,일,이,삼,사,오,육,칠,팔,구]/g, d => '영일이삼사오육칠팔구'.indexOf(d));\n","export default __webpack_public_path__ + \"static/media/samples.3e6d4047.gif\";","export default __webpack_public_path__ + \"static/media/roadmap.63870ffd.png\";","import { useEffect, useState } from \"react\";\nimport { ethers } from 'ethers';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintNFT\n} from \"./util/interact.js\";\nimport {\n  arabic,\n  chinese,\n  hindi,\n  korean,\n  persian,\n  parseRoman,\n  h2e,\n  a2e,\n  c2e,\n  k2e,\n  p2e\n} from \"./util/nonascii.js\";\nimport './index.css';\nimport sample from \"./img/samples.gif\";\nimport roadmap from \"./img/roadmap.png\";\nimport { homepage } from '../package.json';\nrequire(\"dotenv\").config();\nconst alchemyKeyMainnet = process.env.REACT_APP_ALCHEMY_KEY_MAINNET;\n\nconst Minter = (props) => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [ens, setENS] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageHash, setMessageHash] = useState(\"\");\n  const [uri, setURI] = useState(\"\");\n  const [signature, setSignature] = useState(\"\");\n  const [nft, setNFT] = useState(\"\");\n  const [record, setRecord] = useState(\"\");\n\n  function isMobileDevice() {\n    return 'ontouchstart' in window || 'onmsgesturechange' in window;\n  }\n  const isMobile = isMobileDevice();\n\n  var mainnet = new ethers.providers.AlchemyProvider(\"homestead\", alchemyKeyMainnet);\n  const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  useEffect(() => {\n    let isComponentMounted = true;\n    const fetchData = async () => {\n      const { address, status } = await getCurrentWalletConnected();\n      if(isComponentMounted) {\n        setWallet(address);\n        setStatus(status);\n        addWalletListener(address);\n      }\n    };\n    fetchData();\n    return () => {\n      isComponentMounted = false;\n    }\n  }, []);\n\n  let navigate = useNavigate();\n\n  const goToHome = () =>{\n    if (!isMobile) {\n      let path = `/`;\n      navigate(path);\n    } else {\n      let path = `/minter`;\n      navigate(path);\n    }\n  }\n\n  const goToAlgorithm = () =>{\n    let path = `/algorithm`;\n    navigate(path);\n  }\n\n  const goToGenerate = () =>{\n    let path = `/samples`;\n    navigate(path);\n  }\n\n  async function addWalletListener(address) {\n    const nameResolve = await mainnet.lookupAddress(address);\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setRecord(accounts[0]);\n          setStatus(\"👆🏽 Enter ENS & click 'NEXT ▶▶▶'\");\n        } else {\n          setWallet(\"\");\n          setRecord(\"\");\n          setStatus(\"🦊 Connect to MetaMask using 'Connect Wallet' button\");\n        }\n      });\n      if (nameResolve) {\n        setRecord(nameResolve);\n      } else {\n        setRecord(walletAddress);\n      }\n    }\n  }\n\n  const switchWalletPressed = async () => {\n    if (walletAddress) {\n      // console.log(walletAddress);\n      const accounts = await window.ethereum.request({\n        method: \"wallet_requestPermissions\",\n        params: [{eth_accounts: {}}]\n      }).then(() => window.ethereum.request({\n        method: 'eth_requestAccounts',\n      }))\n      setWallet(accounts[0]);\n      const nameResolve = await mainnet.lookupAddress(accounts[0]);\n      if (nameResolve) {\n        setRecord(nameResolve);\n      } else {\n        setRecord(accounts[0]);\n      }\n    }\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    if (walletResponse.address) {\n      setStatus(walletResponse.status);\n      setWallet(walletResponse.address);\n      const nameResolve = await mainnet.lookupAddress(walletResponse.address);\n      if (nameResolve) {\n        setRecord(nameResolve);\n      } else {\n        setRecord(walletAddress.address);\n      }\n    } else if (isMobile) {\n      navigate('/');\n    }\n  };\n\n  const onSignPressed = async () => {\n    var digit = ens.slice(0, -4);\n    var hasNonAscii = !/^[\\u0000-\\u007f]*$/.test(digit);\n    var isArabic = [...digit].every(item => arabic.includes(item));\n    var isPersian = [...digit].every(item => persian.includes(item));\n    var isHindi = [...digit].every(item => hindi.includes(item));\n    var isChinese = [...digit].every(item => chinese.includes(item));\n    var isKorean = [...digit].every(item => korean.includes(item));\n    var isRoman = /^(m{1,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|c?d|d?c{1,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|x?l|l?x{1,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|i?v|v?i{1,3}))$/.test(digit.toLowerCase());\n\n    if (\n      (\n        !isRoman && hasNonAscii &&\n        (\n          (digit.length >= 3 && digit.length <= 5 && isArabic) || (digit.length >= 3 && digit.length <= 5 && isHindi) || (digit.length >= 3 && digit.length <= 5 && isChinese) || (digit.length >= 3 && digit.length <= 5 && isKorean)\n        )\n      ) ||\n      (\n        isRoman && !hasNonAscii &&\n        (\n          parseRoman(digit) < 4000\n        ) && digit.length >= 3 && digit.length <= 10\n      ) ||\n      (\n        !hasNonAscii && !isRoman &&\n        (\n          (digit.length === 5\n            && digit.substring(2,3) === \"h\"\n            && ( (/^[0-1]+$/.test(digit.substring(0,1)) && /^[0-9]+$/.test(digit.substring(1,2))) || (/^[2-2]+$/.test(digit.substring(0,1)) && /^[0-9]+$/.test(digit.substring(1,2))) )\n            && /^[0-5]+$/.test(digit.substring(3,4))\n            && /^[0-9]+$/.test(digit.substring(4,5))\n          )\n          || (digit.length >= 3 && digit.length <= 5 && /^[0-9]+$/.test(digit))\n          || (digit.length >= 3 && digit.length <= 7 && digit.startsWith(\"0x\") && /^[0-9]+$/.test(digit.substring(2)))\n        )\n      )\n    ) {\n      var trans = '';\n      var lang = '';\n      if (isArabic) {\n        trans = a2e(digit);\n        lang = 'arabic';\n      } else if (isHindi) {\n        trans = h2e(digit);\n        lang = 'hindi';\n      } else if (isRoman) {\n        trans = parseRoman(digit);\n        lang = 'roman';\n        digit = digit.toLowerCase();\n      } else if (isChinese) {\n        trans = c2e(digit);\n        lang = 'chinese';\n      } else if (isKorean) {\n        trans = k2e(digit);\n        lang = 'korean';\n      } else if (isPersian) {\n        trans = p2e(digit);\n        lang = 'persian';\n      } else {\n        trans = digit;\n        lang = 'english';\n      }\n      setStatus('⌛ Checking ENS digit ownership... please wait!');\n      const addressResolve = await mainnet.resolveName(`${digit}.eth`);\n      if ( addressResolve ) {\n        if ( addressResolve.toLowerCase() === walletAddress.toLowerCase() ) {\n          setStatus('✅ Ownership confirmed! Waiting for Signature ⌛');\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = provider.getSigner();\n          const timestamp = Date.now();\n          const rawMessage = `Signed by ${walletAddress} at time ${timestamp}`;\n          const toSign = ethers.utils.id(rawMessage);\n          const payload = ethers.utils.defaultAbiCoder.encode([ \"bytes32\", \"string\" ], [ toSign, rawMessage ]);\n          const messageHashed = ethers.utils.keccak256(payload);\n          setMessageHash(toSign);\n          setMessage(rawMessage);\n          if (message !== '') {\n            console.log('⌛ Signing and generating card... Please wait!');\n            const messageBytes = ethers.utils.arrayify(messageHashed);\n            const signedValue = await signer.signMessage(messageBytes);\n            setSignature(signedValue);\n            if (signedValue) {\n              setStatus('⌛ Signed! Generating card... please wait! (can take up to 60 seconds)');\n            } else {\n              setStatus('❌ Signature declined or failed to Sign. Try again!');\n            }\n            const meta = {\n              signature: signedValue,\n              message: toSign,\n              ens: ens,\n              trans: trans + '.eth',\n              lang: lang,\n              toSign: message,\n              prompt: 'mint'\n            };\n            try {\n              console.log('Request ↓↓↓');\n              console.log(meta);\n              await fetch(\n                \"https://indexit.club:3001/write\",\n                {\n                  method: \"post\",\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify(meta)\n                })\n                .then(response => response.json())\n                .then(data => {\n                  console.log('Response ↓↓↓');\n                  console.log(data);\n                  setURI(data.uri);\n                  if (data.signature !== signedValue) {\n                    if (data.signature === 'wait') {\n                      window.alert('✋ You are in queue! Try again in a few minutes ⌛')\n                      setStatus('✋ You are in queue! Try again in a few minutes ⌛');\n                    } else if (data.signature === 'reset') {\n                      window.alert('❌ Your card could not be generated. Try again 🥴')\n                      setStatus('❌ Your card could not be generated. Try again 🥴');\n                    } else {\n                      window.alert('❌ Error! Signature mismatch!')\n                      setStatus('❌ Error! Signature mismatch!');\n                    }\n                  } else if (data.image === 'empty') {\n                      setStatus('✋ You are in queue! Try again in a few minutes ⌛');\n                      window.alert('✋ You are in queue! Try again in a few minutes ⌛')\n                  } else if (data.image === 'reset') {\n                    setStatus('❌ Your card could not be generated. Try again 🥴');\n                    window.alert('❌ Your card could not be generated. Try again 🥴')\n                  } else {\n                    setNFT(data.link);\n                    setStatus(\"💾 Card generated! Click on 'MINT' (or Sign again)\");\n                  }\n                });\n            } catch (error) {\n              setStatus('✋ Hold up! Backend is not reachable. Try later ⌛');\n              window.alert('✋ Hold up! Backend is not reachable. Try later ⌛')\n            }\n          } else {\n            setStatus(\"✅ Valid ENS! Click 'NEXT ▶▶▶' to Sign\");\n          }\n        } else {\n          window.alert('❌ ENS digit does not resolve to connect wallet ✋')\n          setStatus('❌ ENS digit does not resolve to connect wallet ✋');\n        }\n      } else {\n        window.alert('❌ ENS digit does not resolve to connect wallet ✋')\n        setStatus('❌ ENS digit does not resolve to connect wallet ✋');\n      }\n    } else {\n      setENS('.none');\n      window.alert(\"❌ Provided ENS doesn't belong to 999, 10k, 100k, 24h, SPQR or 0xdigit Clubs!\");\n      setStatus(\"❌ Provided ENS doesn't belong to 999, 10k, 100k, 24h, SPQR or 0xdigit Clubs!\");\n    }\n  };\n\n  const onMintPressed = async () => {\n    setStatus('⌛ Minting Card... Please Wait!');\n    const { success, status } = await mintNFT(uri, ens, message, signature, messageHash);\n    setStatus(status);\n    if (success) {\n      console.log('🚀 Transaction sent! Check your wallet or LooksRare/Rarible/OpenSea.');\n      window.alert('🚀 Transaction sent! Check your wallet or LooksRare/Rarible/OpenSea.');\n    } else {\n      window.alert(status);\n    }\n  };\n\n  return (\n    <div className=\"Minter\">\n      <button id=\"sampleButton\" onClick={goToHome}>\n        🏛 HOME\n      </button>\n      <button id=\"sampleButton\" onClick={goToGenerate}>\n        🎁 SAMPLES\n      </button>\n      <button id=\"sampleButton\" onClick={goToAlgorithm}>\n        📃 INFO\n      </button>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          record ? (\n            !record.endsWith('.eth') ? (\n              \"⌛  \" +\n              String(walletAddress).substring(0, 6) +\n              \"...\" +\n              String(walletAddress).substring(38)\n            ) : (\n              \"🦊  \" + record\n            )\n          ) : (\n            \"🦊  \" +\n            String(walletAddress).substring(0, 6) +\n            \"...\" +\n            String(walletAddress).substring(38)\n          )\n        ) : (\n          <span>🦊 CONNECT WALLET</span>\n        )}\n      </button>\n\n      {!walletAddress && !isMobile ? (\n        <button id=\"switchWalletButton\" style={{ background: 'grey', color: 'white' }}>\n          🔒 CHANGE WALLET\n        </button>\n      ) : walletAddress && !isMobile ? (\n        <button id=\"switchWalletButton\" onClick={switchWalletPressed}>\n          🔐 CHANGE WALLET\n        </button>\n      ) : (\n        <div></div>\n      )}\n\n      <br></br>\n      <h3 style={{ marginTop: '70px', marginLeft: '10px' }}><span style={{ fontSize: 20, color: '#370080' }} className='blink_fast'>📰 العربية/<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/<span style={{ fontWeight: 200 }}>देवनागरी</span>/roman digits supported!</span></h3>\n      <h1 id=\"title\" style={{ marginTop: '20px' }}>🚀 RARITY CARDS FOR DIGIT CLUBS</h1>\n      <img style={{ float: 'right', marginBottom: '20px' }} alt=\"sample\" src={sample} width=\"337\" height=\"400\"/>\n      <h3 style={{ marginTop: '10px', marginLeft: '20px' }}><span style={{ fontSize: 30 }}>🦊 </span>  connect metamask</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '30px' }}>connect wallet resolved by a digit name (requires a resolver)</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '20px' }}><span style={{ fontSize: 30 }}>🕙 </span>  sign a timestamp to generate card</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '30px' }}>why sign<span style={{ fontFamily: 'DM Mono' }}>?</span> unique verifiable signature will be printed on your card!</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '20px' }}><span style={{ fontSize: 30 }}>🖨️ </span>  mint your unique card!</h3>\n      {!walletAddress ? (\n        <div style={{ fontFamily:'SFMono', marginLeft: '30px' }}>\n          <form style={{ marginBottom: '10px', width: '300px' }}>\n            <input\n              id=\"ens\"\n              type=\"text\"\n              placeholder=\"Connect Wallet\"\n              disabled\n            />\n          </form>\n        </div>\n      ) : (\n        <div style={{ fontFamily:'SFMono', marginLeft: '30px' }}>\n          <form style={{ marginBottom: '10px', width: '350px' }}>\n            <input\n              id=\"ens\"\n              type=\"text\"\n              placeholder=\"Enter digit.eth & Click on 'NEXT ▶▶▶'\"\n              onChange={(event) => setENS(event.target.value)}\n\n            />\n          </form>\n        </div>\n      )}\n      <h6 style={{ marginTop: '-8px', color: 'blue', marginLeft: '30px', fontFamily: 'SFMono', fontSize: 15, fontWeight: 100 }}>999, 10k, 100k (english/العربية/देवनागरी/中国人/한국인/فارسی), 24h, 0xdigit, Roman</h6>\n      <h6 style={{ marginTop: '-38px', color: 'blue', marginLeft: '40px', fontFamily: 'SFMono', fontSize: 12, fontWeight: 100 }}>✓ 034.eth, ٢٣٢٣٤.eth, ४५६७.eth, 四五六七.eth, 육구구오.eth, ۳۵۴.eth, 05h11.eth, 0x01397.eth, dcccxxxix.eth</h6>\n      {!ens.endsWith(\".eth\") || !walletAddress ? (\n        <div style={{ marginleft: '60px' }}>\n          <button id=\"signButton\" style={{ background: 'grey', color: 'white' }}>\n            <span>🔒 NEXT </span>\n          </button>\n        </div>\n        ) : (\n        <div>\n          <button id=\"signButton\" onClick={onSignPressed}>\n            <span>NEXT ▶▶▶</span>\n          </button>\n        </div>\n      )}\n      {!nft || !walletAddress ? (\n        <div style={{ marginleft: '15px' }}>\n          <button id=\"mintButton\" style={{ background: 'grey', color: 'white' }}>\n            🔒 MINT\n          </button>\n        </div>\n        ) : (\n        <div>\n          <button id=\"mintButton\" onClick={onMintPressed}>\n            MINT\n          </button>\n        </div>\n      )}\n      {status && walletAddress ? (\n        <div className='errorbox'>\n            {status.toString().toLowerCase()}\n        </div>\n        ) : (\n        <div className='errorbox'>\n            {\"🦊 Connect to MetaMask using 'Connect Wallet' button\".toLowerCase()}\n        </div>\n      )}\n      {nft ? (\n        <div><img style={{ marginTop: '100px', marginBottom: '5px', marginLeft: '20px' }} alt=\"nft\" src={nft} width=\"674\"/></div>\n        ) : (\n        <p></p>\n      )}\n      <h1 style={{ marginTop: '150px' }}>FAQ:</h1>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>🀄 WHAT ARE RARITY CARDS FOR DIGIT CLUBS?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}>rarity cards assign rarity to ens names in <span style={{ fontWeight: 600 }}>999</span>, <span style={{ fontWeight: 600 }}>10k</span>, <span style={{ fontWeight: 600 }}>100k</span> (<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}>देवनागरी</span>) & <span style={{ fontWeight: 600 }}>24h</span>, <span style={{ fontWeight: 600 }}>0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>digit</span>, roman clubs based on their mathematical properties. each card is unique to an ens name, printed with signature of the resolved wallet, thereby making it conceptually soulbound to an ens name (aka tokenbound token or tbt), but not contractually - yet. </h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>📚 LINK TO COLLECTION?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}><a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://looksrare.org/collections/0x14aB45F6EdC154E338E27f8d1d2A7caD4ed62EC2\" target='_blank' rel=\"noreferrer\">looksrare</a> ✅, <a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://rarible.com/collection/0x14aB45F6EdC154E338E27f8d1d2A7caD4ed62EC2\" target='_blank' rel=\"noreferrer\">rarible</a> ✅, <a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://opensea.io/collection/iigenesis?search[sortAscending]=false&search[sortBy]=CREATED_DATE\" target='_blank' rel=\"noreferrer\">opensea</a> ✅</h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>📓 CONTRACT ADDRESS?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}><a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://etherscan.io/address/0x14ab45f6edc154e338e27f8d1d2a7cad4ed62ec2\" target='_blank' rel=\"noreferrer\">0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>14ab45f6 ... 4ed62ec2</a></h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>⏰ WHEN CAN I MINT?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}>we are going live on <span style={{ fontWeight: 600 }}>mainnet on june 30 2022</span>! in the meantime, you can generate sample unsigned cards in the 'samples' tab!</h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>🍾 WHO CAN MINT?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}>wallet <span style={{ fontWeight: 600 }}>resolved</span> by an ens name in <span style={{ fontWeight: 600 }}>999, 10k, 100k</span> (<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}>देवनागरी</span>) & <span style={{ fontWeight: 600 }}>24h</span>, <span style={{ fontWeight: 600 }}>0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>digit</span>, roman club can mint! you can only mint the card for an ens digit for which a resolver is set pointing to your wallet. ownership (registrant) or control (controller) is not necessary.</h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>💸 WHAT'S THE MINT PRICE?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '50px' }}><span style={{ fontWeight: 600 }}>3l </span>clubs: 0.050 eth + gas (<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}>देवनागरी</span> 999 & 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>1l)</h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '50px' }}><span style={{ fontWeight: 600 }}>4l </span>clubs: 0.010 eth + gas (<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}><span style={{ fontWeight: 200 }}>देवनागरी </span> </span> 10k & 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>2l)</h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '50px' }}><span style={{ fontWeight: 600 }}>5l </span>clubs: 0.005 eth + gas (24h, <span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}>देवनागरी</span> 100k, roman & 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>3l, 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>4l, 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>5l)</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '35px' }}>🎁 card holders will be eligible for premium zero-cost features in the future, such as wrapped subdomains hosting their digiverse, card drops on polygon and more! check out the roadmap below!</h3>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>⚙️ WHAT CRITERIA ARE TESTED FOR RARITY?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}>the algorithm checks for whether the number is <span style={{ fontWeight: 600 }}>even</span>, <span style={{ fontWeight: 600 }}>odd</span>, <span style={{ fontWeight: 600 }}>palindrome</span>, has <span style={{ fontWeight: 600 }}>repeating</span>, <span style={{ fontWeight: 600 }}>alternating</span> and/or <span style={{ fontWeight: 600 }}>incrementing</span> characters, and <span style={{ fontWeight: 600 }}>69</span> types (honest coincidence 😋) of <span style={{ fontWeight: 600 }}>primes</span>! types of primes checked by the algorithm are: </h4>\n      {width > 1050 ? (\n        <h5 style={{ marginTop: '20px', marginLeft: '45px' }}>balanced<br></br> bell<br></br> chen<br></br> circular<br></br> cousin<br></br> cuban<br></br> dihedral<br></br> eisenstein<br></br> emirp<br></br> euclid<br></br> factorial<br></br> fermat<br></br> fibonacci<br></br> fortunate<br></br> gaussian<br></br> good<br></br> happy<br></br> harmonic<br></br> higgs<br></br> home<br></br> irregular<br></br> isolated<br></br> leyland<br></br> long<br></br> lucas<br></br> lucky<br></br> mersenne<br></br> repunit<br></br> mills<br></br> minimal<br></br> n4<br></br> non-generous<br></br> palindromic<br></br> partition<br></br> pell<br></br> permutable<br></br> perrin<br></br> pierpoint<br></br> pillai<br></br> primeval<br></br> primorial<br></br> proth<br></br> pythagorean<br></br> quadruplet<br></br> quartan<br></br> ramanujan<br></br> safe<br></br> self<br></br> sexy<br></br> smarandache-wellin<br></br> solinas<br></br> stern<br></br> strobo-grammatic<br></br> super-singular<br></br> thabit<br></br> two-sided<br></br> triplet<br></br> twin<br></br> unique<br></br> wagstaff<br></br> weakly<br></br> wilson<br></br> wolstenholme<br></br> woodall primes</h5>\n      ) : (\n        <h6 style={{ marginTop: '20px', marginLeft: '45px', fontSize: 16 }}>balanced, bell, chen, circular, cousin, cuban, dihedral, eisenstein, emirp, euclid, factorial, fermat, fibonacci, fortunate, gaussian, good, happy, harmonic, higgs, home, irregular, isolated, leyland, long, lucas, lucky, mersenne, repunit, mills, minimal, n4, non-generous, palindromic, partition, pell, permutable, perrin, pierpoint, pillai, primeval, primorial, proth, pythagorean, quadruplet, quartan, ramanujan, safe, self, sexy, smarandache-wellin, solinas, stern, strobo-grammatic, super-singular, thabit, two-sided, triplet, twin, unique, wagstaff, weakly, wilson, wolstenholme, woodall primes</h6>\n      )}\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>🚧 ROADMAP?</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}>indexit.eth subdomains for card holders, support non-digit ens, and more!</h4>\n      <br></br>\n      <img style={{ marginLeft: '10px', marginTop: '10px', marginBottom: '100px' }} alt=\"roadmap\" src={roadmap} height=\"750\" />\n      <br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <span style={{ fontFamily: 'Major Mono Display', fontSize: '14px', fontWeight: 600, marginLeft: '10%' }}>twitter: <a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://twitter.com/indexit_eth\" target='_blank' rel=\"noreferrer\">@indexit_eth</a></span>\n      <br></br>\n    </div>\n  );\n};\n\nexport default Minter;\n","import { useNavigate } from \"react-router-dom\";\nimport './index.css';\nimport { homepage } from '../package.json';\nimport Minter from './Minter';\n\nconst Mobile = (props) => {\n  let navigate = useNavigate();\n  function isMobileDevice() {\n    return 'ontouchstart' in window || 'onmsgesturechange' in window;\n  }\n  const isMobile = isMobileDevice();\n  const goToHome = () =>{\n    let path = `/minter`\n    navigate(path);\n  }\n\n  if (isMobile) {\n    return (\n      <div className=\"Mobile\">\n        <h6>you are accessing this app on mobile. connect with metamask to connect, or continue in browser without connecting.</h6>\n        <button\n          onClick={() => {location.href='https://metamask.app.link/dapp/' + homepage.split(\"://\").pop() + '/#/minter'}}\n          id=\"sampleButton\"\n          style= {{ marginLeft: 'auto', marginBottom: '20px'}}\n        >\n          🦊 Open MetaMask Mobile\n        </button>\n        <br></br>\n        <br></br>\n        <button\n          onClick={goToHome}\n          id=\"sampleButton\"\n          style= {{ marginLeft: 'auto', marginBottom: '20px'}}\n        >\n          🌎 Continue in Browser\n        </button>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  } else {\n    return (\n      <Minter/>\n    );\n  }\n\n};\n\nexport default Mobile;\n","import { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  arabic,\n  chinese,\n  hindi,\n  korean,\n  persian,\n  parseRoman,\n  h2e,\n  a2e,\n  c2e,\n  k2e,\n  p2e\n} from \"./util/nonascii.js\";\nimport sample from \"./img/samples.gif\";\n\nconst Samples = (props) => {\n  const [ens, setENS] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [nftFront, setNFTFront] = useState(\"\");\n  const [nftBack, setNFTBack] = useState(\"\");\n  let navigate = useNavigate();\n  useEffect((status) => {\n    return () => {\n      setStatus(status);\n    }\n  }, []);\n\n  function isMobileDevice() {\n    return 'ontouchstart' in window || 'onmsgesturechange' in window;\n  }\n  const isMobile = isMobileDevice();\n\n  const goToHome = () =>{\n    let path = `/minter`\n    navigate(path);\n  }\n\n  const goToAlgorithm = () =>{\n    let path = `/algorithm`;\n    navigate(path);\n  }\n\n  const goToGenerate = () =>{\n    let path = `/samples`;\n    navigate(path);\n  }\n\n  const onGeneratePressed = async () => {\n    setStatus('Processing... ⌛');\n    var digit = ens.slice(0, -4);\n    var hasNonAscii = !/^[\\u0000-\\u007f]*$/.test(digit);\n    var isArabic = [...digit].every(item => arabic.includes(item));\n    var isHindi = [...digit].every(item => hindi.includes(item));\n    var isChinese = [...digit].every(item => chinese.includes(item));\n    var isKorean = [...digit].every(item => korean.includes(item));\n    var isPersian = [...digit].every(item => persian.includes(item));\n    var isRoman = /^(m{1,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|c?d|d?c{1,3})(xc|xl|l?x{0,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|x?l|l?x{1,3})(ix|iv|v?i{0,3})|m{0,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|i?v|v?i{1,3}))$/.test(digit.toLowerCase());\n\n    if (\n      (\n        !isRoman && hasNonAscii &&\n        (\n          (digit.length >= 3 && digit.length <= 5 && isArabic) || (digit.length >= 3 && digit.length <= 5 && isHindi) || (digit.length >= 3 && digit.length <= 5 && isChinese) || (digit.length >= 3 && digit.length <= 5 && isKorean) || (digit.length >= 3 && digit.length <= 5 && isPersian)\n        )\n      ) ||\n      (\n        isRoman && !hasNonAscii &&\n        (\n          parseRoman(digit) < 4000\n        ) && digit.length >= 3 && digit.length <= 15\n      ) ||\n      (\n        !hasNonAscii && !isRoman &&\n        (\n          (digit.length === 5\n            && digit.substring(2,3) === \"h\"\n            && ( (/^[0-1]+$/.test(digit.substring(0,1)) && /^[0-9]+$/.test(digit.substring(1,2))) || (/^[2-2]+$/.test(digit.substring(0,1)) && /^[0-9]+$/.test(digit.substring(1,2))) )\n            && /^[0-5]+$/.test(digit.substring(3,4))\n            && /^[0-9]+$/.test(digit.substring(4,5))\n          )\n          || (digit.length >= 3 && digit.length <= 5 && /^[0-9]+$/.test(digit))\n          || (digit.length >= 3 && digit.length <= 7 && digit.startsWith(\"0x\") && /^[0-9]+$/.test(digit.substring(2)))\n        )\n      )\n    ) {\n      setENS(`${digit}.eth`);\n      setStatus('⌛ Generating card... please wait! (up to 60 seconds)');\n\n      try {\n        console.log('⌛ Generating card... please wait!');\n        const timestamp = Date.now();\n        var trans = '';\n        var lang = '';\n        if (isArabic) {\n          trans = a2e(digit);\n          lang = 'arabic';\n        } else if (isHindi) {\n          trans = h2e(digit);\n          lang = 'hindi';\n        } else if (isRoman) {\n          trans = parseRoman(digit);\n          lang = 'roman';\n          digit = digit.toLowerCase();\n        } else if (isChinese) {\n          trans = c2e(digit);\n          lang = 'chinese';\n        } else if (isKorean) {\n          trans = k2e(digit);\n          lang = 'korean';\n        } else if (isPersian) {\n          trans = p2e(digit);\n          lang = 'persian';\n        } else {\n          trans = digit;\n          lang = 'english';\n        }\n\n        const meta = {\n          signature: '0xfuckthisfuckwhyfuckberaswagmigmgmgmgmggmygmigmiaaauuurrgggggoblintownsaylordokwon3acsuzhucelsiusmarkrektlolallwhyplshelpmafamiliia',\n          message: '0xwenmoonwenlambowenmonieshelpsirpleasengmimcdonaldsmcafeesamsifuo',\n          ens: ens,\n          trans: trans + '.eth',\n          lang: lang,\n          toSign: `Signed by ${digit}.eth at time ${timestamp}`,\n          prompt: 'sample'\n        };\n        try {\n          console.log('Request ↓↓↓');\n          console.log(meta);\n          await fetch(\n            \"https://indexit.club:3001/write\",\n            {\n              method: \"post\",\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(meta)\n            })\n            .then(response => response.json())\n            .then(data => {\n              console.log('Response ↓↓↓');\n              console.log(data);\n              if (data.image === 'empty') {\n                setStatus('✋ Slow down champ! Let the previous request finish ⌛');\n                window.alert('✋ Slow down champ! Let the previous request finish ⌛')\n              } else if (data.image === 'reset') {\n                setStatus('❌ Your card could not be generated. Devs have been told 🥴');\n                window.alert('❌ Your card could not be generated. Devs have been told 🥴')\n              } else if (data.image === 'exists' || data.image.startsWith('https')) {\n                const urlImg = data.link.slice(0, -4);\n                setNFTFront(urlImg + '-Front.png');\n                setNFTBack(urlImg + '-Back.png');\n                setStatus('✅ Card generated! See below.');\n              } else {\n                setStatus('❌ Unknown error! Try again ⌛');\n                window.alert('❌ Unknown error! Try again ⌛')\n              }\n            });\n        } catch (error) {\n          setStatus('✋ Hold up! Backend is not reachable. Try later ⌛');\n          window.alert('✋ Hold up! Backend is not reachable. Try later ⌛')\n        }\n      } catch (error) {\n        setStatus(\"✅ Valid ENS! Click 'NEXT ▶▶▶' to generate\");\n      }\n    } else {\n      setENS('.none');\n      window.alert(\"❌ Provided ENS doesn't belong to 999, 10k, 100k, SPQR, 24h or 0xdigit Clubs!\");\n      setStatus(\"❌ Provided ENS doesn't belong to 999, 10k, 100k, SPQR, 24h or 0xdigit Clubs!\");\n    }\n  }\n  return (\n    <div className=\"Minter\">\n      <button id=\"sampleButton\" onClick={goToHome}>\n        🏛 HOME\n      </button>\n      <button id=\"sampleButton\" onClick={goToGenerate}>\n        🎁 SAMPLES\n      </button>\n      <button id=\"sampleButton\" onClick={goToAlgorithm}>\n        📃 INFO\n      </button>\n      <br></br><br></br>\n      <img style={{ float: 'right', marginBottom: '20px', marginTop: '30px' }} alt=\"sample\" src={sample} width=\"337\" height=\"400\"/>\n      <br></br><br></br>\n      <h1 id=\"title\" style={{ marginTop: '100px' }}>🚀 RARITY CARDS FOR DIGIT CLUBS</h1>\n      <h4 style={{ marginTop: '10px', marginLeft: '10px' }}><span style={{ fontSize: 30 }}>🎁 </span>enter ens name & generate a sample unsigned card</h4>\n      <form style={{ marginBottom: '10px', width: '300px', marginLeft: '10px' }}>\n        <input\n          id=\"ens\"\n          type=\"text\"\n          placeholder=\"Enter ENS & Click on 'NEXT ▶▶▶'\"\n          onChange={(event) => setENS(event.target.value)}\n\n        />\n      </form>\n      <h6 style={{ marginTop: '-8px', color: 'blue', marginLeft: '10px', fontFamily: 'SFMono', fontSize: 15, fontWeight: 100 }}>999, 10k, 100k (english/العربية/देवनागरी/中国人/한국인/فارسی), 24h, 0xdigit, Roman</h6>\n      <h6 style={{ marginTop: '-38px', color: 'blue', marginLeft: '20px', fontFamily: 'SFMono', fontSize: 12, fontWeight: 100 }}>✓ 034.eth, ٢٣٢٣٤.eth, ४५६७.eth, 四五六七.eth, 육구구오.eth, ۳۵۴.eth, 05h11.eth, 0x01397.eth, dcccxxxix.eth</h6>\n      {!ens.endsWith(\".eth\") ? (\n        <div>\n          <button id=\"signButton\" style={{ background: 'grey', color: 'white', marginLeft: '10px' }}>\n            <span>🔒 NEXT</span>\n          </button>\n        </div>\n        ) : (\n        <div>\n          <button id=\"signButton\" onClick={onGeneratePressed} style={{ marginLeft: '10px' }}>\n            <span>NEXT ▶▶▶</span>\n          </button>\n        </div>\n      )}\n      <br></br>\n      {status ? (\n        <div className='errorbox' style={{marginTop: '50px', marginBottom: '100px'}}>\n          {status.toString().toLowerCase()}\n        </div>\n        ) : (\n        <p></p>\n      )}\n      <br></br>\n      {nftFront && nftBack ? (\n        <div style={{ float: 'left', marginLeft: '10px', marginTop: '100px', marginBottom: '100px' }}>\n          <img alt=\"nftfront\" src={nftFront} width=\"337\"/>\n          <img alt=\"nftback\" src={nftBack} width=\"337\"/>\n        </div>\n        ) : (\n        <p></p>\n      )}\n      <br></br>\n      <p></p>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <span style={{ fontFamily: 'Major Mono Display', fontSize: '14px', fontWeight: 600, marginLeft: '10%' }}>twitter: <a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://twitter.com/indexit_eth\" target='_blank' rel=\"noreferrer\">@indexit_eth</a></span>\n      <br></br>\n    </div>\n  );\n}\n\nexport default Samples;\n","export default __webpack_public_path__ + \"static/media/algorithm.fc35e8b7.png\";","import { useNavigate } from \"react-router-dom\";\nimport algorithm from \"./img/algorithm.png\";\n\nconst Algorithm = (props) => {\n  const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  let navigate = useNavigate();\n\n  function isMobileDevice() {\n    return 'ontouchstart' in window || 'onmsgesturechange' in window;\n  }\n  const isMobile = isMobileDevice();\n\n  const goToHome = () =>{\n    let path = `/minter`\n    navigate(path);\n  }\n\n  const goToAlgorithm = () =>{\n    let path = `/algorithm`;\n    navigate(path);\n  }\n\n  const goToGenerate = () =>{\n    let path = `/samples`;\n    navigate(path);\n  }\n\n  return (\n    <div className=\"Minter\">\n      <button id=\"sampleButton\" onClick={goToHome}>\n        🏛 HOME\n      </button>\n      <button id=\"sampleButton\" onClick={goToGenerate}>\n        🎁 SAMPLES\n      </button>\n      <button id=\"sampleButton\" onClick={goToAlgorithm}>\n        📃 INFO\n      </button>\n      <br></br><br></br><br></br><br></br>\n      <br></br><br></br><br></br>\n      <img style={{ float: 'right', marginLeft: '100px', marginBottom: '30px'  }} alt=\"sample\" src={algorithm} height=\"700\"/>\n      <h2 style={{ marginTop: '20px', marginLeft: '10px' }}>📓 CONTRACT</h2>\n      <h3 style={{ marginTop: '20px', marginLeft: '30px' }}>iigenesis (iig)</h3>\n      <h4 style={{ marginTop: '20px', marginLeft: '30px' }}><a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://etherscan.io/address/0x14ab45f6edc154e338e27f8d1d2a7cad4ed62ec2\" target='_blank' rel=\"noreferrer\">0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>14ab45f ... ed62ec2</a> (erc721)</h4>\n      <h2 style={{ marginTop: '10px', marginLeft: '5px' }}>📓 CLUBS SO FAR</h2>\n      <h4 style={{ marginTop: '2px', marginLeft: '15px' }}><span style={{ fontWeight: 600 }}>999, 10k & 100k</span> (<span style={{ fontWeight: 200 }}>中国人/한국인/فارسی</span>/english/العربية/<span style={{ fontWeight: 200 }}>देवनागरी</span>), <span style={{ fontWeight: 600 }}>24h</span>, <span style={{ fontWeight: 600 }}>0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>digit</span>, roman clubs</h4>\n      <h2 style={{ marginTop: '20px', marginLeft: '5px' }}>📓 CLUBS COMING SOON</h2>\n      <h4 style={{ marginTop: '2px', marginLeft: '15px' }}><span style={{ fontWeight: 600 }}>hebrew</span> digits</h4>\n      <h2 style={{ marginTop: '10px', marginLeft: '5px' }}>📓 ABOUT THE TRAITS</h2>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 index</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if a digit is <span style={{ fontWeight: 600 }}>odd</span> and <span style={{ fontWeight: 600 }}>prime</span>, it is assigned <span style={{ fontWeight: 600 }}>index 1.0 (highest)</span>, otherwise it is assigned <span style={{ fontWeight: 600 }}>index 0.0 (lowest)</span>. if a digit is <span style={{ fontWeight: 600 }}>even</span> but its <span style={{ fontWeight: 600 }}>half is a prime</span>, then it is assigned <span style={{ fontWeight: 600 }}>index 0.5 (mid-tier)</span>, otherwise it is assigned <span style={{ fontWeight: 600 }}>index 0 (lowest)</span>. </h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 odd</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if a digit is <span style={{ fontWeight: 600 }}>odd</span>. </h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 even</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if a digit is <span style={{ fontWeight: 600 }}>even</span>.</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 palindrome</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if a digit is a <span style={{ fontWeight: 600 }}>palindrome</span>.</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 prime</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if a digit is <span style={{ fontWeight: 600 }}>prime</span>.</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 prime count</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> number of <span style={{ fontWeight: 600 }}>prime types/families</span> that the digit is member of. </h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 prime form</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> An abbreviation showing the different memberships in the form <span style={{ fontWeight: 600 }}>n<sub>k</sub></span>, where <span style={{ fontWeight: 600 }}>n is the initial of family name</span>, and <span style={{ fontWeight: 600 }}>c is the number of memberships</span> corresponding to n. for instance, if a digit is of type bell, balanced, chen but not higgs, then it will have a form of b<sub>2</sub>c<sub>1</sub>h<sub>0</sub>. </h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 repeating</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> ratio between <span style={{ fontWeight: 600 }}>maximum repetitions of a character</span> (after removing '0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>' and 'h', if applicable) and the length of ens name, i.e. 02323.eth → 0.4, 01234 → <span style={{ fontWeight: 600 }}>0.2 (lowest)</span>, 0000.eth → <span style={{ fontWeight: 600 }}>1.0 (highest)</span> etc. ratio is rounded to one decimal. note: for 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>digit and 24h clubs, '0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>' and 'h' are removed before calculating the numerator, i.e. 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>0000.eth → 0.7, 23h21.eth → 0.4 etc.</h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 alternating</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if the name has <span style={{ fontWeight: 600 }}>strictly alternating characters</span> (after removing '0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>' and 'h', if applicable), e.g. 01010.eth, 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>7575.eth, 13h13.eth, 121.eth etc. </h4>\n      <h3 style={{ marginTop: '10px', marginLeft: '15px' }}>📊 incrementing</h3>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> if the <span style={{ fontWeight: 600 }}>difference between successive characters is a constant</span> positive or negative number (after removing '0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>' and 'h', if applicable), e.g. 321.eth, 1357.eth, 0<span style={{ fontFamily: 'SFMono', fontWeight: 400 }}>x</span>2468.eth, 23h45.eth, 97531.eth etc. </h4>\n      <h2 style={{ marginTop: '10px', marginLeft: '5px' }}>📓 TYPES OF PRIMES</h2>\n      <h4 style={{ marginTop: '10px', marginLeft: '20px' }}> the algorithm checks for <span style={{ fontWeight: 600 }}>69 types of primes</span>. these primes are:</h4>\n      {width > 1050 ? (\n        <h5 style={{ marginTop: '20px', marginLeft: '45px' }}>balanced<br></br> bell<br></br> chen<br></br> circular<br></br> cousin<br></br> cuban<br></br> dihedral<br></br> eisenstein<br></br> emirp<br></br> euclid<br></br> factorial<br></br> fermat<br></br> fibonacci<br></br> fortunate<br></br> gaussian<br></br> good<br></br> happy<br></br> harmonic<br></br> higgs<br></br> home<br></br> irregular<br></br> isolated<br></br> leyland<br></br> long<br></br> lucas<br></br> lucky<br></br> mersenne<br></br> repunit<br></br> mills<br></br> minimal<br></br> n4<br></br> non-generous<br></br> palindromic<br></br> partition<br></br> pell<br></br> permutable<br></br> perrin<br></br> pierpoint<br></br> pillai<br></br> primeval<br></br> primorial<br></br> proth<br></br> pythagorean<br></br> quadruplet<br></br> quartan<br></br> ramanujan<br></br> safe<br></br> self<br></br> sexy<br></br> smarandache-wellin<br></br> solinas<br></br> stern<br></br> strobo-grammatic<br></br> super-singular<br></br> thabit<br></br> two-sided<br></br> triplet<br></br> twin<br></br> unique<br></br> wagstaff<br></br> weakly<br></br> wilson<br></br> wolstenholme<br></br> woodall primes</h5>\n      ) : (\n        <h6 style={{ marginTop: '20px', marginLeft: '45px', fontSize: 16 }}>balanced, bell, chen, circular, cousin, cuban, dihedral, eisenstein, emirp, euclid, factorial, fermat, fibonacci, fortunate, gaussian, good, happy, harmonic, higgs, home, irregular, isolated, leyland, long, lucas, lucky, mersenne, repunit, mills, minimal, n4, non-generous, palindromic, partition, pell, permutable, perrin, pierpoint, pillai, primeval, primorial, proth, pythagorean, quadruplet, quartan, ramanujan, safe, self, sexy, smarandache-wellin, solinas, stern, strobo-grammatic, super-singular, thabit, two-sided, triplet, twin, unique, wagstaff, weakly, wilson, wolstenholme, woodall primes</h6>\n      )}\n      <h2 style={{ marginTop: '20px', marginLeft: '05px' }}>📓 NEWS & UPDATES</h2>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>✅ 29/06/2022: contract deployed</h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>⚠️ 29/06/2022: bug reported during mainnet testing in backend queuing</h4>\n      <h6 style={{ marginTop: '01px', marginLeft: '50px' }}>️‍❗ affected tokenid: 0-7, metadata-image mismatch</h6>\n      <h6 style={{ marginTop: '01px', marginLeft: '50px' }}>⚙️ fix implemented</h6>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>⚠️ 29/06/2022: bug reported in opensea rendering</h4>\n      <h6 style={{ marginTop: '01px', marginLeft: '50px' }}>️‍❗ affected tokenid: 0-11, 1:1 aspect ratio not rendered</h6>\n      <h6 style={{ marginTop: '01px', marginLeft: '50px' }}>⚙️ fix implemented</h6>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>✅ 29/06/2022: dynamic metadata implemented </h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>🚀 30/06/2022: launch! </h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>✅ 03/07/2022: العربية (arabic) and <span style={{ fontWeight: 200 }}>देवनागरी </span> (hindi) support added to 999, 10k and 100k clubs </h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>✅ 04/07/2022: <span style={{ fontWeight: 200 }}>中国人</span> (chinese) and roman (spqr) clubs supported </h4>\n      <h4 style={{ marginTop: '20px', marginLeft: '20px' }}>✅ 18/07/2022: <span style={{ fontWeight: 200 }}>한국인</span> (korean) and فارسی (persian) clubs supported </h4>\n      <br></br>\n      <span style={{ fontFamily: 'Major Mono Display', fontSize: '14px', fontWeight: 600, marginLeft: '10%' }}>twitter: <a style={{ color: 'blue', textDecoration: 'none' }} href=\"https://twitter.com/indexit_eth\" target='_blank' rel=\"noreferrer\">@indexit_eth</a></span>\n    </div>\n  );\n};\n\nexport default Algorithm;\n","import './App.css';\nimport Minter from './Minter';\nimport Mobile from './Mobile';\nimport Samples from './Samples';\nimport Algorithm from './Algorithm';\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  function isMobileDevice() {\n    return 'ontouchstart' in window || 'onmsgesturechange' in window;\n  }\n  const isMobile = isMobileDevice();\n\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n          <Routes>\n            <Route exact path='/' element={<Mobile/>}/>\n            <Route exact path='/minter' element={<Minter/>}/>\n            <Route exact path='/samples' element={<Samples/>}/>\n            <Route exact path='/algorithm' element={<Algorithm/>}/>\n          </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}